package arnavi

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

var (
	dumpPacket = []byte{
		//		0x5B,
		//		0x01,
		0x01,       // type
		0x3C, 0x00, // size   60
		0xFD, 0x5A, 0xAA, 0x5A, //time unixtime 0x506BF1E3= 1349251555(unix time) = Wed, 03 Oct 2012 08:05:55 GMT
		0x03, 0x95, 0x8B, 0x5E, 0x42,
		0x04, 0x8F, 0xD5, 0x14, 0x42,
		0x05, 0x00, 0x15, 0x77, 0x00,
		0x97, 0xDB, 0x00, 0x00, 0x00,
		0x07, 0x5F, 0xD6, 0x9B, 0x13,
		0x08, 0x02, 0xFA, 0x00, 0x18,
		0x09, 0x00, 0xD0, 0xC5, 0x64,
		0x01, 0x0F, 0x11, 0xEA, 0x3A,
		0x5B, 0x07, 0x00, 0x09, 0x01,
		0x5C, 0x00, 0x00, 0x9C, 0x00,
		0x5D, 0x00, 0x00, 0x8C, 0x00,
		0xFA, 0x32, 0x01, 0x00, 0x00,
		0xA6,
		//		0x5D,
	}
	testPacket = PacketS{
		TypeContent:  PackTagsType,
		LengthPacket: 60,
		TimePacket:   1521113853,
		Data:         &dataTeg,
		CheckSum:     0xA6,
	}
)

func TestPacketS_Decode(t *testing.T) {
	newPack := PacketS{}

	err := newPack.Decode(dumpPacket)
	if assert.NoError(t, err) {
		assert.Equal(t, newPack, testPacket)
	}

}

func TestPacketS_Encode(t *testing.T) {
	buteTest, err := testPacket.Encode()
	if assert.NoError(t, err) {
		assert.Equal(t, dumpPacket, buteTest)
	}
}

func TestPacketS_Length(t *testing.T) {
	lt := testPacket.Length()
	lr := uint16(len(dumpPacket))
	assert.Equal(t, lr, lt)
}
