package arnavi

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

var (
	bytesTeg = []byte{
		0x03, 0x95, 0x8B, 0x5E, 0x42,
		0x04, 0x8F, 0xD5, 0x14, 0x42,
		0x05, 0x00, 0x15, 0x77, 0x00,
		0x97, 0xDB, 0x00, 0x00, 0x00,
		0x07, 0x5F, 0xD6, 0x9B, 0x13,
		0x08, 0x02, 0xFA, 0x00, 0x18,
		0x09, 0x00, 0xD0, 0xC5, 0x64,
		0x01, 0x0F, 0x11, 0xEA, 0x3A,
		0x5B, 0x07, 0x00, 0x09, 0x01,
		0x5C, 0x00, 0x00, 0x9C, 0x00,
		0x5D, 0x00, 0x00, 0x8C, 0x00,
		0xFA, 0x32, 0x01, 0x00, 0x00,
	}
	dataAllTeg = []AllTags{
		{TagNum: 0x97, Val: []byte{0xDB, 0x00, 0x00, 0x00}},
		{TagNum: 0x07, Val: []byte{0x5F, 0xD6, 0x9B, 0x13}},
		{TagNum: 0x08, Val: []byte{0x02, 0xFA, 0x00, 0x18}},
		{TagNum: 0x09, Val: []byte{0x00, 0xD0, 0xC5, 0x64}},
		{TagNum: 0x01, Val: []byte{0x0F, 0x11, 0xEA, 0x3A}},
		{TagNum: 0x5B, Val: []byte{0x07, 0x00, 0x09, 0x01}},
		{TagNum: 0x5C, Val: []byte{0x00, 0x00, 0x9C, 0x00}},
		{TagNum: 0x5D, Val: []byte{0x00, 0x00, 0x8C, 0x00}},
		{TagNum: 0xFA, Val: []byte{0x32, 0x01, 0x00, 0x00}},
	}

	dataTeg = TagsData{
		ListActive: 7,
		Latitude:   556363110,
		Longitude:  372085530,
		Speed:      0,
		Satellites: 119,
		Altitude:   210,
		Data:       dataAllTeg,
	}
)

func TestTagsDataDump_Decode(t *testing.T) {
	newTag := TagsData{}
	err := newTag.Decode(bytesTeg)
	if assert.NoError(t, err) {
		assert.Equal(t, newTag, dataTeg)
	}
}

func TestTagsDataDump_Encode(t *testing.T) {

	buteTest, err := dataTeg.Encode()
	if assert.NoError(t, err) {
		assert.Equal(t, buteTest, bytesTeg)
	}
}

func TestTagsDataDump_Length(t *testing.T) {

	l := dataTeg.Length()

	assert.Equal(t, l, uint16(len(bytesTeg)))

}
